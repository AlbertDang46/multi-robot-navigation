/home/liyiping/anaconda3/envs/CrowdNav2/lib/python3.10/site-packages/gym/logger.py:30: UserWarning: [33mWARN: Box bound precision lowered by casting to float32
  warnings.warn(colorize('%s: %s'%('WARN', msg % args), 'yellow'))
/home/liyiping/dev/ogm_pred/ogm_sogmp_trans_pos/CrowdNav_Prediction_AttnGraph/train.py:125: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  actor_critic.load_state_dict(torch.load(load_path),strict=False)
/home/liyiping/dev/ogm_pred/ogm_sogmp_trans_pos/CrowdNav_Prediction_AttnGraph/rl/networks/ogm_rnn.py:769: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  robot_vel_pos_list=[torch.tensor(item) for item in self.robot_vel_pos_deque[robot_index]]
/home/liyiping/dev/ogm_pred/ogm_sogmp_trans_pos/CrowdNav_Prediction_AttnGraph/rl/networks/ogm_rnn.py:770: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  lidar_list=[torch.tensor(item) for item in self.lidar_deque[robot_index]]
Loaded the following checkpoint: trained_models/my_model/trans_pos_2/checkpoints/00200.pt
tensor([[[[ 0.0000,  6.0552,  1.9122, -7.4995,  6.0552]]]], device='cuda:0')
Angular change: tensor([[[-0.2814]]], device='cuda:0')
tensor([[[[ 0.1949,  5.7738,  1.9548, -7.5233, -0.2814]]]], device='cuda:0')
Angular change: tensor([[[-0.0729]]], device='cuda:0')
Angular change: tensor([[[-0.2179]]], device='cuda:0')
Angular change: tensor([[[-0.5016]]], device='cuda:0')
tensor([[[[ 0.2060,  5.5003,  1.9913, -7.5596, -0.5016]]]], device='cuda:0')
Angular change: tensor([[[3.0083]]], device='cuda:0')
Angular change: tensor([[[-0.4858]]], device='cuda:0')
Angular change: tensor([[[-0.5639]]], device='cuda:0')
tensor([[[[ 0.1931,  5.2177,  2.0147, -7.6018, -0.5639]]]], device='cuda:0')
Angular change: tensor([[[0.1820]]], device='cuda:0')
Angular change: tensor([[[-0.4398]]], device='cuda:0')
Angular change: tensor([[[-0.7848]]], device='cuda:0')
tensor([[[[ 0.1922,  4.9344,  2.0252, -7.6487, -0.7848]]]], device='cuda:0')
Angular change: tensor([[[-3.0567]]], device='cuda:0')
Angular change: tensor([[[-0.5752]]], device='cuda:0')
Angular change: tensor([[[-0.8308]]], device='cuda:0')
tensor([[[[ 0.2157,  4.6676,  2.0228, -7.7026, -0.8308]]]], device='cuda:0')
Angular change: tensor([[[0.0988]]], device='cuda:0')
Angular change: tensor([[[-0.6072]]], device='cuda:0')
Angular change: tensor([[[-1.0268]]], device='cuda:0')
tensor([[[[ 0.2516,  4.4256,  2.0050, -7.7629, -1.0268]]]], device='cuda:0')
Angular change: tensor([[[-3.0152]]], device='cuda:0')
Angular change: tensor([[[-0.7049]]], device='cuda:0')
Angular change: tensor([[[-1.0551]]], device='cuda:0')
tensor([[[[ 0.2769,  4.2013,  1.9712, -7.8233, -1.0551]]]], device='cuda:0')
Angular change: tensor([[[0.2023]]], device='cuda:0')
Angular change: tensor([[[-0.5740]]], device='cuda:0')
Angular change: tensor([[[-1.2923]]], device='cuda:0')
tensor([[[[ 0.2176,  3.9357,  1.9330, -7.8621, -1.2923]]]], device='cuda:0')
Angular change: tensor([[[-2.9664]]], device='cuda:0')
Angular change: tensor([[[-0.5020]]], device='cuda:0')
Angular change: tensor([[[-1.3196]]], device='cuda:0')
tensor([[[[ 0.2191,  3.6712,  1.8858, -7.8898, -1.3196]]]], device='cuda:0')
Angular change: tensor([[[0.4091]]], device='cuda:0')
Angular change: tensor([[[-0.6400]]], device='cuda:0')
Angular change: tensor([[[-1.4591]]], device='cuda:0')
tensor([[[[ 0.3599,  3.5045,  1.8016, -7.9217, -1.4591]]]], device='cuda:0')
Angular change: tensor([[[-2.9434]]], device='cuda:0')
Angular change: tensor([[[-0.3261]]], device='cuda:0')
Angular change: tensor([[[-1.4367]]], device='cuda:0')
tensor([[[[ 0.4314,  3.3874,  1.6970, -7.9480, -1.4367]]]], device='cuda:0')
Angular change: tensor([[[0.5642]]], device='cuda:0')
Angular change: tensor([[[-0.6224]]], device='cuda:0')
Angular change: tensor([[[-1.5741]]], device='cuda:0')
tensor([[[[ 0.4344,  3.2724,  1.5894, -7.9621, -1.5741]]]], device='cuda:0')
Angular change: tensor([[[-2.8049]]], device='cuda:0')
Angular change: tensor([[[-0.2291]]], device='cuda:0')
Angular change: tensor([[[-1.6653]]], device='cuda:0')
tensor([[[[ 0.2707,  3.0438,  1.5220, -7.9555, -1.6653]]]], device='cuda:0')
Angular change: tensor([[[0.4189]]], device='cuda:0')
Angular change: tensor([[[-0.7180]]], device='cuda:0')
Angular change: tensor([[[-1.6631]]], device='cuda:0')
tensor([[[[ 0.4718,  2.9547,  1.4061, -7.9336, -1.6631]]]], device='cuda:0')
Angular change: tensor([[[-2.7451]]], device='cuda:0')
Angular change: tensor([[[-0.1554]]], device='cuda:0')
Angular change: tensor([[[-1.7417]]], device='cuda:0')
tensor([[[[ 0.4900,  2.8784,  1.2878, -7.9017, -1.7417]]]], device='cuda:0')
Angular change: tensor([[[0.3789]]], device='cuda:0')
Angular change: tensor([[[-0.8678]]], device='cuda:0')
Angular change: tensor([[[-1.7146]]], device='cuda:0')
tensor([[[[ 0.5258,  2.8269,  1.1628, -7.8610, -1.7146]]]], device='cuda:0')
Angular change: tensor([[[-2.7618]]], device='cuda:0')
Angular change: tensor([[[-0.3866]]], device='cuda:0')
Angular change: tensor([[[-1.7003]]], device='cuda:0')
tensor([[[[ 0.5404,  2.8683,  1.0327, -7.8246, -1.7003]]]], device='cuda:0')
Angular change: tensor([[[0.3248]]], device='cuda:0')
Angular change: tensor([[[-0.9787]]], device='cuda:0')
Angular change: tensor([[[-1.8817]]], device='cuda:0')
tensor([[[[ 0.3594,  2.7012,  0.9514, -7.7863, -1.8817]]]], device='cuda:0')
Angular change: tensor([[[-2.7390]]], device='cuda:0')
Angular change: tensor([[[-0.4977]]], device='cuda:0')
Angular change: tensor([[[-1.6253]]], device='cuda:0')
tensor([[[[ 0.4920,  2.7762,  0.8366, -7.7423, -1.6253]]]], device='cuda:0')
Angular change: tensor([[[0.5432]]], device='cuda:0')
Angular change: tensor([[[-0.7592]]], device='cuda:0')
Angular change: tensor([[[-1.9663]]], device='cuda:0')
tensor([[[[ 0.4781,  2.6916,  0.7289, -7.6903, -1.9663]]]], device='cuda:0')
Angular change: tensor([[[-2.6092]]], device='cuda:0')
Angular change: tensor([[[-0.4133]]], device='cuda:0')
Angular change: tensor([[[-1.4759]]], device='cuda:0')
tensor([[[[ 0.3849,  2.8410,  0.6370, -7.6618, -1.4759]]]], device='cuda:0')
Angular change: tensor([[[0.4538]]], device='cuda:0')
Angular change: tensor([[[-0.5252]]], device='cuda:0')
Angular change: tensor([[[-1.7632]]], device='cuda:0')
tensor([[[[ 0.3075,  3.0441,  0.5605, -7.6544, -1.7632]]]], device='cuda:0')
Angular change: tensor([[[-2.6883]]], device='cuda:0')
Angular change: tensor([[[-0.3318]]], device='cuda:0')
Angular change: tensor([[[-1.3137]]], device='cuda:0')
tensor([[[[ 0.3664,  3.2063,  0.4691, -7.6603, -1.3137]]]], device='cuda:0')
Angular change: tensor([[[0.5744]]], device='cuda:0')
Angular change: tensor([[[-0.5276]]], device='cuda:0')
Angular change: tensor([[[-1.8931]]], device='cuda:0')
tensor([[[[ 0.4128,  3.0764,  0.3661, -7.6536, -1.8931]]]], device='cuda:0')
Angular change: tensor([[[-2.8255]]], device='cuda:0')
Angular change: tensor([[[-0.1657]]], device='cuda:0')
Angular change: tensor([[[-1.3165]]], device='cuda:0')
tensor([[[[ 0.5959,  3.0735,  0.2175, -7.6434, -1.3165]]]], device='cuda:0')
Angular change: tensor([[[0.4286]]], device='cuda:0')
Angular change: tensor([[[-0.6881]]], device='cuda:0')
Angular change: tensor([[[-1.7207]]], device='cuda:0')
tensor([[[[ 0.3518,  3.2459,  0.1300, -7.6526, -1.7207]]]], device='cuda:0')
Angular change: tensor([[[-3.0245]]], device='cuda:0')
Angular change: tensor([[[-0.2240]]], device='cuda:0')
/home/liyiping/dev/ogm_pred/ogm_sogmp_trans_pos/CrowdNav_Prediction_AttnGraph/rl/networks/ogm_rnn.py:835: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  robot_vel_pos_list=[torch.tensor(item) for item in self.robot_vel_pos_deque[robot_index]]
/home/liyiping/dev/ogm_pred/ogm_sogmp_trans_pos/CrowdNav_Prediction_AttnGraph/rl/networks/ogm_rnn.py:836: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  lidar_list=[torch.tensor(item) for item in self.lidar_deque[robot_index]]
Angular change: tensor([[[-1.5201]]], device='cuda:0')
tensor([[[[ 0.3069,  3.0424,  0.0537, -7.6450, -1.5201]]]], device='cuda:0')
Angular change: tensor([[[0.2894]]], device='cuda:0')
Angular change: tensor([[[-0.5175]]], device='cuda:0')
Angular change: tensor([[[-1.5752]]], device='cuda:0')
tensor([[[[ 0.3905,  3.1879, -0.0439, -7.6495, -1.5752]]]], device='cuda:0')
Angular change: tensor([[[3.1223]]], device='cuda:0')
Angular change: tensor([[[-0.2549]]], device='cuda:0')
Angular change: tensor([[[-1.5067]]], device='cuda:0')
tensor([[[[ 0.5808,  3.2013, -0.1888, -7.6582, -1.5067]]]], device='cuda:0')
Angular change: tensor([[[0.3152]]], device='cuda:0')
Angular change: tensor([[[-0.6509]]], device='cuda:0')
Angular change: tensor([[[-1.6784]]], device='cuda:0')
tensor([[[[ 0.4515,  3.0981, -0.3016, -7.6533, -1.6784]]]], device='cuda:0')
Angular change: tensor([[[-2.9555]]], device='cuda:0')
Angular change: tensor([[[-0.4798]]], device='cuda:0')
Predictor Training Loss: 14.880143165588379 KL Loss: 263.0616149902344 CE Loss: 12.249526659647623
Avg wmse 0.18567778170108795 Avg ssim 0.6175207495689392
Predictor Training Loss: 15.266014099121094 KL Loss: 250.85455830891928 CE Loss: 12.757468382517496
Avg wmse 0.20981289446353912 Avg ssim 0.5972389578819275
Predictor Training Loss: 20.187658309936523 KL Loss: 242.65462239583334 CE Loss: 17.761111577351887
Avg wmse 0.2563331425189972 Avg ssim 0.5283865332603455
Predictor Training Loss: 31.83802604675293 KL Loss: 228.0872344970703 CE Loss: 29.55715338389079
Avg wmse 0.3190782964229584 Avg ssim 0.3943662643432617
Predictor Training Loss: 29.632631301879883 KL Loss: 214.08219401041666 CE Loss: 27.491809844970703
Avg wmse 0.3125956356525421 Avg ssim 0.4021516740322113
Angular change: tensor([[[-1.5067]]], device='cuda:0')
tensor([[[[ 0.4515,  3.0981, -0.3016, -7.6533, -1.5067]]]], device='cuda:0')
Angular change: tensor([[[0.3152]]], device='cuda:0')
Angular change: tensor([[[-0.6509]]], device='cuda:0')
Angular change: tensor([[[-1.7972]]], device='cuda:0')
tensor([[[[ 0.4289,  2.9793, -0.4074, -7.6359, -1.7972]]]], device='cuda:0')
Angular change: tensor([[[-2.9549]]], device='cuda:0')
Angular change: tensor([[[-0.6381]]], device='cuda:0')
Angular change: tensor([[[-1.5707]]], device='cuda:0')
tensor([[[[ 0.5078,  2.9153, -0.5311, -7.6074, -1.5707]]]], device='cuda:0')
Angular change: tensor([[[0.4098]]], device='cuda:0')
Angular change: tensor([[[-0.7398]]], device='cuda:0')
Angular change: tensor([[[-1.7139]]], device='cuda:0')
tensor([[[[ 0.4800,  2.9986, -0.6499, -7.5903, -1.7139]]]], device='cuda:0')
Angular change: tensor([[[-3.1350]]], device='cuda:0')
Angular change: tensor([[[-0.6658]]], device='cuda:0')
Angular change: tensor([[[-1.4927]]], device='cuda:0')
tensor([[[[ 0.4877,  3.0766, -0.7715, -7.5824, -1.4927]]]], device='cuda:0')
Angular change: tensor([[[0.2392]]], device='cuda:0')
Angular change: tensor([[[-0.7946]]], device='cuda:0')
Angular change: tensor([[[-1.6763]]], device='cuda:0')
tensor([[[[ 0.5459,  3.1142, -0.9080, -7.5787, -1.6763]]]], device='cuda:0')
Angular change: tensor([[[-3.0966]]], device='cuda:0')
Angular change: tensor([[[-0.4505]]], device='cuda:0')
Angular change: tensor([[[-1.5352]]], device='cuda:0')
tensor([[[[ 0.5388,  3.0717, -1.0423, -7.5693, -1.5352]]]], device='cuda:0')
Angular change: tensor([[[0.4874]]], device='cuda:0')
Angular change: tensor([[[-0.6140]]], device='cuda:0')
Angular change: tensor([[[-1.5295]]], device='cuda:0')
tensor([[[[ 0.3886,  3.2185, -1.1392, -7.5768, -1.5295]]]], device='cuda:0')
Angular change: tensor([[[-2.9091]]], device='cuda:0')
Angular change: tensor([[[-0.2412]]], device='cuda:0')
Angular change: tensor([[[-1.6656]]], device='cuda:0')
tensor([[[[ 0.4122,  3.0881, -1.2421, -7.5712, -1.6656]]]], device='cuda:0')
Angular change: tensor([[[0.6100]]], device='cuda:0')
Angular change: tensor([[[-0.5916]]], device='cuda:0')
Angular change: tensor([[[-1.6948]]], device='cuda:0')
tensor([[[[ 0.3619,  2.9228, -1.3304, -7.5516, -1.6948]]]], device='cuda:0')
Angular change: tensor([[[-2.7443]]], device='cuda:0')
Angular change: tensor([[[-0.1768]]], device='cuda:0')
Angular change: tensor([[[-1.6076]]], device='cuda:0')
tensor([[[[ 0.5165,  2.9807, -1.4579, -7.5309, -1.6076]]]], device='cuda:0')
Angular change: tensor([[[0.3612]]], device='cuda:0')
Angular change: tensor([[[-0.7618]]], device='cuda:0')
Angular change: tensor([[[-1.5972]]], device='cuda:0')
tensor([[[[ 0.4595,  3.0783, -1.5725, -7.5237, -1.5972]]]], device='cuda:0')
Angular change: tensor([[[-2.6996]]], device='cuda:0')
Angular change: tensor([[[-0.2163]]], device='cuda:0')
Angular change: tensor([[[-1.4772]]], device='cuda:0')
tensor([[[[ 0.4121,  3.2088, -1.6753, -7.5306, -1.4772]]]], device='cuda:0')
Angular change: tensor([[[0.4681]]], device='cuda:0')
Angular change: tensor([[[-0.6083]]], device='cuda:0')
Angular change: tensor([[[-1.5732]]], device='cuda:0')
tensor([[[[ 0.5654,  3.2329, -1.8161, -7.5435, -1.5732]]]], device='cuda:0')
Angular change: tensor([[[-2.6442]]], device='cuda:0')
Angular change: tensor([[[-0.3079]]], device='cuda:0')
Angular change: tensor([[[-1.6274]]], device='cuda:0')
tensor([[[[ 0.3837,  3.0827, -1.9118, -7.5378, -1.6274]]]], device='cuda:0')
Angular change: tensor([[[0.2639]]], device='cuda:0')
Angular change: tensor([[[-0.8179]]], device='cuda:0')
Angular change: tensor([[[-1.7518]]], device='cuda:0')
tensor([[[[ 0.3428,  2.9040, -1.9951, -7.5176, -1.7518]]]], device='cuda:0')
Angular change: tensor([[[-2.5637]]], device='cuda:0')
Angular change: tensor([[[-0.3177]]], device='cuda:0')
Angular change: tensor([[[-1.4394]]], device='cuda:0')
tensor([[[[ 0.3294,  3.0920, -2.0774, -7.5136, -1.4394]]]], device='cuda:0')
Angular change: tensor([[[0.0635]]], device='cuda:0')
Angular change: tensor([[[-0.9120]]], device='cuda:0')
Angular change: tensor([[[-1.7003]]], device='cuda:0')
tensor([[[[ 0.5259,  3.1434, -2.2088, -7.5138, -1.7003]]]], device='cuda:0')
Angular change: tensor([[[-2.7763]]], device='cuda:0')
Angular change: tensor([[[-0.4679]]], device='cuda:0')
Angular change: tensor([[[-1.6732]]], device='cuda:0')
tensor([[[[ 0.2633,  2.9096, -2.2729, -7.4987, -1.6732]]]], device='cuda:0')
Angular change: tensor([[[0.2549]]], device='cuda:0')
Angular change: tensor([[[-0.8991]]], device='cuda:0')
Angular change: tensor([[[-1.8899]]], device='cuda:0')
tensor([[[[ 0.3269,  2.7200, -2.3475, -7.4652, -1.8899]]]], device='cuda:0')
Angular change: tensor([[[-2.7930]]], device='cuda:0')
Angular change: tensor([[[-0.2516]]], device='cuda:0')
Angular change: tensor([[[-1.5254]]], device='cuda:0')
tensor([[[[ 0.3871,  2.8679, -2.4407, -7.4391, -1.5254]]]], device='cuda:0')
Angular change: tensor([[[0.1779]]], device='cuda:0')
Angular change: tensor([[[-1.0204]]], device='cuda:0')
Angular change: tensor([[[-1.8335]]], device='cuda:0')
tensor([[[[ 0.5187,  2.9243, -2.5673, -7.4111, -1.8335]]]], device='cuda:0')
Angular change: tensor([[[-2.7346]]], device='cuda:0')
Angular change: tensor([[[-0.3816]]], device='cuda:0')
Angular change: tensor([[[-1.6826]]], device='cuda:0')
tensor([[[[ 0.3736,  2.7671, -2.6542, -7.3769, -1.6826]]]], device='cuda:0')
Angular change: tensor([[[0.2509]]], device='cuda:0')
Angular change: tensor([[[-1.1246]]], device='cuda:0')
Angular change: tensor([[[-1.9605]]], device='cuda:0')
tensor([[[[ 0.4171,  2.6401, -2.7457, -7.3268, -1.9605]]]], device='cuda:0')
Angular change: tensor([[[-2.8389]]], device='cuda:0')
Angular change: tensor([[[-0.2247]]], device='cuda:0')
Angular change: tensor([[[-1.6895]]], device='cuda:0')
tensor([[[[ 0.5901,  2.6332, -2.8745, -7.2550, -1.6895]]]], device='cuda:0')
Angular change: tensor([[[0.0206]]], device='cuda:0')
Angular change: tensor([[[-1.1918]]], device='cuda:0')
Angular change: tensor([[[-2.1050]]], device='cuda:0')
tensor([[[[ 0.3919,  2.4887, -2.9524, -7.1955, -2.1050]]]], device='cuda:0')
Angular change: tensor([[[-2.8117]]], device='cuda:0')
Angular change: tensor([[[-0.0965]]], device='cuda:0')
Angular change: tensor([[[-1.7894]]], device='cuda:0')
tensor([[[[ 0.4561,  2.3888, -3.0356, -7.1175, -1.7894]]]], device='cuda:0')
Angular change: tensor([[[0.0206]]], device='cuda:0')
Angular change: tensor([[[-1.1918]]], device='cuda:0')
Angular change: tensor([[[-2.2580]]], device='cuda:0')
tensor([[[[ 0.3797,  2.2358, -3.0941, -7.0428, -2.2580]]]], device='cuda:0')
Angular change: tensor([[[-2.8117]]], device='cuda:0')
Angular change: tensor([[[-0.0965]]], device='cuda:0')
Angular change: tensor([[[-1.6642]]], device='cuda:0')
tensor([[[[ 0.4197,  2.3610, -3.1687, -6.9690, -1.6642]]]], device='cuda:0')
Angular change: tensor([[[0.0206]]], device='cuda:0')
Angular change: tensor([[[-1.1918]]], device='cuda:0')
Angular change: tensor([[[-2.0387]]], device='cuda:0')
tensor([[[[ 0.2843,  2.5802, -3.2289, -6.9312, -2.0387]]]], device='cuda:0')
Angular change: tensor([[[-2.8117]]], device='cuda:0')
Angular change: tensor([[[-0.0965]]], device='cuda:0')
Angular change: tensor([[[-1.4864]]], device='cuda:0')
tensor([[[[ 0.3439,  2.7581, -3.3086, -6.8990, -1.4864]]]], device='cuda:0')
Angular change: tensor([[[0.0206]]], device='cuda:0')
Angular change: tensor([[[-1.1918]]], device='cuda:0')
Predictor Training Loss: 24.760189056396484 KL Loss: 201.27227274576822 CE Loss: 22.747466405232746
Avg wmse 0.26150524616241455 Avg ssim 0.4896370470523834
Predictor Training Loss: 23.410444895426433 KL Loss: 204.92206827799478 CE Loss: 21.361223856608074
Avg wmse 0.25526705384254456 Avg ssim 0.5040957927703857
Predictor Training Loss: 27.643654505411785 KL Loss: 230.1154022216797 CE Loss: 25.342500686645508
Avg wmse 0.27840614318847656 Avg ssim 0.4587501287460327
Predictor Training Loss: 32.497484842936196 KL Loss: 209.02380879720053 CE Loss: 30.407246907552082
Avg wmse 0.3229883015155792 Avg ssim 0.3678261339664459
Predictor Training Loss: 31.08630625406901 KL Loss: 202.4021453857422 CE Loss: 29.06228510538737
Avg wmse 0.3159819543361664 Avg ssim 0.37172603607177734
Angular change: tensor([[[-2.0387]]], device='cuda:0')
tensor([[[[ 0.3439,  2.7581, -3.3086, -6.8990, -2.0387]]]], device='cuda:0')
Angular change: tensor([[[-2.8117]]], device='cuda:0')
Angular change: tensor([[[-0.0965]]], device='cuda:0')
Angular change: tensor([[[-1.3024]]], device='cuda:0')
tensor([[[[ 0.3350,  2.9421, -3.3907, -6.8824, -1.3024]]]], device='cuda:0')
Angular change: tensor([[[0.0206]]], device='cuda:0')
Angular change: tensor([[[-1.1918]]], device='cuda:0')
Angular change: tensor([[[-2.1756]]], device='cuda:0')
tensor([[[[ 0.4029,  2.8052, -3.4858, -6.8491, -2.1756]]]], device='cuda:0')
Angular change: tensor([[[-2.8117]]], device='cuda:0')
Angular change: tensor([[[-0.0965]]], device='cuda:0')
Angular change: tensor([[[-1.2518]]], device='cuda:0')
tensor([[[[ 0.5271,  2.8558, -3.6122, -6.8120, -1.2518]]]], device='cuda:0')
Angular change: tensor([[[0.0206]]], device='cuda:0')
Angular change: tensor([[[-1.1918]]], device='cuda:0')
Angular change: tensor([[[-2.1317]]], device='cuda:0')
tensor([[[[ 0.5367,  2.8998, -3.7425, -6.7799, -2.1317]]]], device='cuda:0')
Angular change: tensor([[[-2.8117]]], device='cuda:0')
Angular change: tensor([[[-0.0965]]], device='cuda:0')
Angular change: tensor([[[-1.3272]]], device='cuda:0')
tensor([[[[ 0.4913,  2.8243, -3.8592, -6.7415, -1.3272]]]], device='cuda:0')
Angular change: tensor([[[0.0206]]], device='cuda:0')
Angular change: tensor([[[-1.1918]]], device='cuda:0')
Angular change: tensor([[[-2.1303]]], device='cuda:0')
tensor([[[[ 0.5981,  2.8256, -4.0013, -6.6951, -2.1303]]]], device='cuda:0')
Angular change: tensor([[[-2.8117]]], device='cuda:0')
Angular change: tensor([[[-0.0965]]], device='cuda:0')
Angular change: tensor([[[-1.5862]]], device='cuda:0')
tensor([[[[ 0.2270,  2.5666, -4.0489, -6.6642, -1.5862]]]], device='cuda:0')
Angular change: tensor([[[0.0206]]], device='cuda:0')
Angular change: tensor([[[-1.1918]]], device='cuda:0')
Angular change: tensor([[[-2.1652]]], device='cuda:0')
tensor([[[[ 0.5498,  2.5317, -4.1616, -6.5855, -2.1652]]]], device='cuda:0')
Angular change: tensor([[[-2.8117]]], device='cuda:0')
Angular change: tensor([[[-0.0965]]], device='cuda:0')
Angular change: tensor([[[-1.5325]]], device='cuda:0')
tensor([[[[ 0.5227,  2.5854, -4.2726, -6.5165, -1.5325]]]], device='cuda:0')
Angular change: tensor([[[0.0206]]], device='cuda:0')
Angular change: tensor([[[-1.1918]]], device='cuda:0')
Angular change: tensor([[[-1.9530]]], device='cuda:0')
tensor([[[[ 0.2944,  2.7976, -4.3419, -6.4917, -1.9530]]]], device='cuda:0')
Angular change: tensor([[[-2.8117]]], device='cuda:0')
Angular change: tensor([[[-0.0965]]], device='cuda:0')
Angular change: tensor([[[-1.3763]]], device='cuda:0')
tensor([[[[ 0.3751,  2.9539, -4.4340, -6.4742, -1.3763]]]], device='cuda:0')
Angular change: tensor([[[0.0206]]], device='cuda:0')
Angular change: tensor([[[-1.1918]]], device='cuda:0')
Angular change: tensor([[[-1.8038]]], device='cuda:0')
tensor([[[[ 0.3852,  3.1030, -4.5302, -6.4705, -1.8038]]]], device='cuda:0')
Angular change: tensor([[[-2.8117]]], device='cuda:0')
Angular change: tensor([[[-0.0965]]], device='cuda:0')
Angular change: tensor([[[-1.5505]]], device='cuda:0')
tensor([[[[ 0.3492,  2.9288, -4.6155, -6.4520, -1.5505]]]], device='cuda:0')
Angular change: tensor([[[0.0206]]], device='cuda:0')
Angular change: tensor([[[-1.1918]]], device='cuda:0')
Angular change: tensor([[[-1.6400]]], device='cuda:0')
tensor([[[[ 0.3641,  3.0927, -4.7064, -6.4476, -1.6400]]]], device='cuda:0')
Angular change: tensor([[[-2.8117]]], device='cuda:0')
Angular change: tensor([[[-0.0965]]], device='cuda:0')
Angular change: tensor([[[-1.5207]]], device='cuda:0')
tensor([[[[ 0.5571,  3.1225, -4.8457, -6.4449, -1.5207]]]], device='cuda:0')
Angular change: tensor([[[0.0206]]], device='cuda:0')
Angular change: tensor([[[-1.1918]]], device='cuda:0')
Angular change: tensor([[[-1.7060]]], device='cuda:0')
tensor([[[[ 0.5050,  3.0565, -4.9715, -6.4342, -1.7060]]]], device='cuda:0')
Angular change: tensor([[[-2.8117]]], device='cuda:0')
Angular change: tensor([[[-0.0965]]], device='cuda:0')
Angular change: tensor([[[-1.7519]]], device='cuda:0')
tensor([[[[ 0.2671,  2.8254, -5.0349, -6.4134, -1.7519]]]], device='cuda:0')
Angular change: tensor([[[0.0206]]], device='cuda:0')
Angular change: tensor([[[-1.1918]]], device='cuda:0')
Angular change: tensor([[[-1.6904]]], device='cuda:0')
tensor([[[[ 0.5776,  2.8409, -5.1729, -6.3707, -1.6904]]]], device='cuda:0')
Angular change: tensor([[[-2.8117]]], device='cuda:0')
Angular change: tensor([[[-0.0965]]], device='cuda:0')
Angular change: tensor([[[-1.8238]]], device='cuda:0')
tensor([[[[ 0.4964,  2.7690, -5.2884, -6.3255, -1.8238]]]], device='cuda:0')
Angular change: tensor([[[0.0206]]], device='cuda:0')
Angular change: tensor([[[-1.1918]]], device='cuda:0')
Angular change: tensor([[[-1.4798]]], device='cuda:0')
tensor([[[[ 0.2968,  2.9795, -5.3617, -6.3135, -1.4798]]]], device='cuda:0')
Angular change: tensor([[[-2.8117]]], device='cuda:0')
Angular change: tensor([[[-0.0965]]], device='cuda:0')
Angular change: tensor([[[-1.9116]]], device='cuda:0')
tensor([[[[ 0.4736,  2.8918, -5.4764, -6.2842, -1.9116]]]], device='cuda:0')
Angular change: tensor([[[0.0206]]], device='cuda:0')
Angular change: tensor([[[-1.1918]]], device='cuda:0')
Angular change: tensor([[[-1.4664]]], device='cuda:0')
tensor([[[[ 0.5807,  2.9052, -5.6175, -6.2502, -1.4664]]]], device='cuda:0')
Angular change: tensor([[[-2.8117]]], device='cuda:0')
Angular change: tensor([[[-0.0965]]], device='cuda:0')
Angular change: tensor([[[-1.9971]]], device='cuda:0')
tensor([[[[ 0.4768,  2.8197, -5.7306, -6.2125, -1.9971]]]], device='cuda:0')
Angular change: tensor([[[0.0206]]], device='cuda:0')
Angular change: tensor([[[-1.1918]]], device='cuda:0')
Angular change: tensor([[[-1.6236]]], device='cuda:0')
tensor([[[[ 0.3737,  2.6625, -5.8135, -6.1695, -1.6236]]]], device='cuda:0')
Angular change: tensor([[[-2.8117]]], device='cuda:0')
Angular change: tensor([[[-0.0965]]], device='cuda:0')
Angular change: tensor([[[-2.0334]]], device='cuda:0')
tensor([[[[ 0.5478,  2.6262, -5.9327, -6.1020, -2.0334]]]], device='cuda:0')
Angular change: tensor([[[0.0206]]], device='cuda:0')
Angular change: tensor([[[-1.1918]]], device='cuda:0')
Angular change: tensor([[[-1.4757]]], device='cuda:0')
tensor([[[[ 0.3870,  2.7741, -6.0230, -6.0672, -1.4757]]]], device='cuda:0')
Angular change: tensor([[[-2.8117]]], device='cuda:0')
Angular change: tensor([[[-0.0965]]], device='cuda:0')
Angular change: tensor([[[-2.2127]]], device='cuda:0')
tensor([[[[ 0.3418,  2.5948, -6.0960, -6.0228, -2.2127]]]], device='cuda:0')
Angular change: tensor([[[0.0206]]], device='cuda:0')
Angular change: tensor([[[-1.1918]]], device='cuda:0')
Angular change: tensor([[[-1.2955]]], device='cuda:0')
tensor([[[[ 0.3406,  2.7750, -6.1754, -5.9922, -1.2955]]]], device='cuda:0')
Angular change: tensor([[[-2.8117]]], device='cuda:0')
Angular change: tensor([[[-0.0965]]], device='cuda:0')
Angular change: tensor([[[-2.2058]]], device='cuda:0')
tensor([[[[ 0.5901,  2.7818, -6.3135, -5.9403, -2.2058]]]], device='cuda:0')
Angular change: tensor([[[0.0206]]], device='cuda:0')
Angular change: tensor([[[-1.1918]]], device='cuda:0')
Angular change: tensor([[[-1.1669]]], device='cuda:0')
tensor([[[[ 0.4148,  2.9105, -6.4145, -5.9166, -1.1669]]]], device='cuda:0')
Angular change: tensor([[[-2.8117]]], device='cuda:0')
Angular change: tensor([[[-0.0965]]], device='cuda:0')
Predictor Training Loss: 23.969106674194336 KL Loss: 240.516845703125 CE Loss: 21.56393877665202
Avg wmse 0.28722313046455383 Avg ssim 0.43630194664001465
Predictor Training Loss: 22.201321283976238 KL Loss: 232.99697875976562 CE Loss: 19.87135124206543
Avg wmse 0.25242623686790466 Avg ssim 0.5165480375289917
Predictor Training Loss: 22.242937723795574 KL Loss: 233.15852864583334 CE Loss: 19.911352793375652
Avg wmse 0.24740128219127655 Avg ssim 0.5476210117340088
Predictor Training Loss: 25.912290573120117 KL Loss: 248.17255655924478 CE Loss: 23.430564880371094
Avg wmse 0.2698003947734833 Avg ssim 0.4935317039489746
Predictor Training Loss: 25.74683888753255 KL Loss: 231.8167470296224 CE Loss: 23.42867088317871
Avg wmse 0.2532013952732086 Avg ssim 0.5159552097320557
Angular change: tensor([[[-2.2058]]], device='cuda:0')
tensor([[[[ 0.4148,  2.9105, -6.4145, -5.9166, -2.2058]]]], device='cuda:0')
Angular change: tensor([[[0.0206]]], device='cuda:0')
Angular change: tensor([[[-1.1918]]], device='cuda:0')
Angular change: tensor([[[-1.2165]]], device='cuda:0')
tensor([[[[ 0.5286,  2.8609, -6.5415, -5.8799, -1.2165]]]], device='cuda:0')
Angular change: tensor([[[-2.8117]]], device='cuda:0')
Angular change: tensor([[[-0.0965]]], device='cuda:0')
Angular change: tensor([[[-2.3294]]], device='cuda:0')
tensor([[[[ 0.4220,  2.7373, -6.6384, -5.8384, -2.3294]]]], device='cuda:0')
Angular change: tensor([[[0.0206]]], device='cuda:0')
Angular change: tensor([[[-1.1918]]], device='cuda:0')
Angular change: tensor([[[-1.1480]]], device='cuda:0')
tensor([[[[ 0.5014,  2.8058, -6.7568, -5.7971, -1.1480]]]], device='cuda:0')
Angular change: tensor([[[-2.8117]]], device='cuda:0')
Angular change: tensor([[[-0.0965]]], device='cuda:0')
Angular change: tensor([[[-2.3218]]], device='cuda:0')
tensor([[[[ 0.5890,  2.8134, -6.8962, -5.7497, -2.3218]]]], device='cuda:0')
Angular change: tensor([[[0.0206]]], device='cuda:0')
Angular change: tensor([[[-1.1918]]], device='cuda:0')
Angular change: tensor([[[-1.3554]]], device='cuda:0')
tensor([[[[ 0.3013,  2.6060, -6.9610, -5.7112, -1.3554]]]], device='cuda:0')
Angular change: tensor([[[-2.8117]]], device='cuda:0')
Angular change: tensor([[[-0.0965]]], device='cuda:0')
Angular change: tensor([[[-2.1890]]], device='cuda:0')
tensor([[[[ 0.4088,  2.7387, -7.0550, -5.6712, -2.1890]]]], device='cuda:0')
Angular change: tensor([[[0.0206]]], device='cuda:0')
Angular change: tensor([[[-1.1918]]], device='cuda:0')
Angular change: tensor([[[-1.1943]]], device='cuda:0')
tensor([[[[ 0.3680,  2.8999, -7.1443, -5.6491, -1.1943]]]], device='cuda:0')
Angular change: tensor([[[-2.8117]]], device='cuda:0')
Angular change: tensor([[[-0.0965]]], device='cuda:0')
Angular change: tensor([[[-2.0295]]], device='cuda:0')
tensor([[[[ 0.3703,  3.0594, -7.2366, -5.6415, -2.0295]]]], device='cuda:0')
Angular change: tensor([[[0.0206]]], device='cuda:0')
Angular change: tensor([[[-1.1918]]], device='cuda:0')
Angular change: tensor([[[-1.1103]]], device='cuda:0')
tensor([[[[ 0.4790,  3.1434, -7.3563, -5.6418, -1.1103]]]], device='cuda:0')
Angular change: tensor([[[-2.8117]]], device='cuda:0')
Angular change: tensor([[[-0.0965]]], device='cuda:0')
20
20
tensor([[[[ 0.0000,  4.0065, -3.1339,  0.6141,  4.0065]]]], device='cuda:0')
Traceback (most recent call last):
  File "/home/liyiping/dev/ogm_pred/ogm_sogmp_trans_pos/CrowdNav_Prediction_AttnGraph/train.py", line 368, in <module>
    main()
  File "/home/liyiping/dev/ogm_pred/ogm_sogmp_trans_pos/CrowdNav_Prediction_AttnGraph/train.py", line 213, in main
    value_i, action_i, log_i, recurrent_hidden_states_i ,ogm_for_vis_i= actor_critic.act(
  File "/home/liyiping/dev/ogm_pred/ogm_sogmp_trans_pos/CrowdNav_Prediction_AttnGraph/rl/networks/model.py", line 60, in act
    value, actor_features, rnn_hxs,ogm_for_vis= self.base(inputs, rnn_hxs, masks, robot_index,infer=True)
  File "/home/liyiping/anaconda3/envs/CrowdNav2/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/liyiping/anaconda3/envs/CrowdNav2/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/liyiping/dev/ogm_pred/ogm_sogmp_trans_pos/CrowdNav_Prediction_AttnGraph/rl/networks/ogm_rnn.py", line 778, in forward
    current_robot_vel_pos_list.append(robot_vel_pos_list[0])
IndexError: list index out of range