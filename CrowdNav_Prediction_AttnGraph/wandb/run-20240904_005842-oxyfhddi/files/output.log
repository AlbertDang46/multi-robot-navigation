Logging to /tmp/openai-2024-09-04-00-58-47-324416
Creating dummy env object to get spaces
Loaded the following checkpoint: trained_models/my_model/holonomic/checkpoints/35600.pt
torch.Size([16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([16, 32, 32])
/home/liyiping/anaconda3/envs/CrowdNav2/lib/python3.10/site-packages/gym/logger.py:30: UserWarning: [33mWARN: Box bound precision lowered by casting to float32
  warnings.warn(colorize('%s: %s'%('WARN', msg % args), 'yellow'))
/home/liyiping/dev/ogm_pred/ogm_sogmp_trans_pos_middle_fusion/CrowdNav_Prediction_AttnGraph/train.py:125: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  actor_critic.load_state_dict(torch.load(load_path),strict=False)
/home/liyiping/dev/ogm_pred/ogm_sogmp_trans_pos_middle_fusion/CrowdNav_Prediction_AttnGraph/rl/networks/ogm_rnn.py:942: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  robot_vel_pos_list=[torch.tensor(item) for item in self.robot_vel_pos_deque[robot_index]]
/home/liyiping/dev/ogm_pred/ogm_sogmp_trans_pos_middle_fusion/CrowdNav_Prediction_AttnGraph/rl/networks/ogm_rnn.py:943: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  lidar_list=[torch.tensor(item) for item in self.lidar_deque[robot_index]]
torch.Size([1, 16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([240, 32, 32])
torch.Size([240, 32, 32])
Predictor Training Loss: 12440.542317708334 KL Loss: 20070.589965820312 CE Loss: 12239.836588541666
Avg wmse 0.2551986277103424 Avg ssim 0.0029138701502233744
torch.Size([240, 32, 32])
torch.Size([240, 32, 32])
torch.Size([240, 32, 32])
Predictor Training Loss: 11984.1435546875 KL Loss: 34818.671223958336 CE Loss: 11635.95703125
Avg wmse 0.2500304877758026 Avg ssim 0.0037577692419290543
torch.Size([240, 32, 32])
/home/liyiping/dev/ogm_pred/ogm_sogmp_trans_pos_middle_fusion/CrowdNav_Prediction_AttnGraph/rl/networks/ogm_rnn.py:1044: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  robot_vel_pos_list=[torch.tensor(item) for item in self.robot_vel_pos_deque[robot_index]]
/home/liyiping/dev/ogm_pred/ogm_sogmp_trans_pos_middle_fusion/CrowdNav_Prediction_AttnGraph/rl/networks/ogm_rnn.py:1045: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  lidar_list=[torch.tensor(item) for item in self.lidar_deque[robot_index]]
torch.Size([240, 32, 32])
torch.Size([240, 32, 32])
Predictor Training Loss: 11124.732096354166 KL Loss: 441.186279296875 CE Loss: 11120.3203125
Avg wmse 0.2500937283039093 Avg ssim 0.003925208933651447
torch.Size([240, 32, 32])
torch.Size([240, 32, 32])
torch.Size([240, 32, 32])
Predictor Training Loss: 10615.7265625 KL Loss: 299.0403594970703 CE Loss: 10612.736328125
Avg wmse 0.2526610791683197 Avg ssim 0.003572816262021661
torch.Size([240, 32, 32])
torch.Size([240, 32, 32])
torch.Size([240, 32, 32])
Predictor Training Loss: 9977.486653645834 KL Loss: 453.93959554036456 CE Loss: 9972.947265625
Avg wmse 0.2566784918308258 Avg ssim 0.003099672496318817
torch.Size([240, 32, 32])
torch.Size([240, 32, 32])
torch.Size([240, 32, 32])
Predictor Training Loss: 9329.8671875 KL Loss: 258.28941853841144 CE Loss: 9327.2841796875
Avg wmse 0.25339868664741516 Avg ssim 0.004459897521883249
torch.Size([240, 32, 32])
torch.Size([240, 32, 32])
torch.Size([240, 32, 32])
Predictor Training Loss: 8750.916666666666 KL Loss: 135.84224955240884 CE Loss: 8749.558268229166
Avg wmse 0.24979352951049805 Avg ssim 0.006185425445437431
torch.Size([240, 32, 32])
torch.Size([240, 32, 32])
torch.Size([240, 32, 32])
Predictor Training Loss: 8107.751302083333 KL Loss: 254.51687622070312 CE Loss: 8105.2060546875
Avg wmse 0.2547178864479065 Avg ssim 0.006558054592460394
torch.Size([240, 32, 32])
torch.Size([240, 32, 32])
torch.Size([240, 32, 32])
Predictor Training Loss: 7874.310221354167 KL Loss: 843.1639811197916 CE Loss: 7865.878580729167
Avg wmse 0.2666027545928955 Avg ssim 0.004546432290226221
torch.Size([240, 32, 32])
torch.Size([240, 32, 32])
torch.Size([240, 32, 32])
Predictor Training Loss: 7131.181477864583 KL Loss: 365.6531931559245 CE Loss: 7127.525065104167
Avg wmse 0.2576237916946411 Avg ssim 0.008947662077844143
torch.Size([240, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([240, 32, 32])])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([240, 32, 32])])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
torch.Size([1, 16, 32, 32])
Predictor Training Loss: 2292.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([240, 32, 32])])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([240, 32, 32])])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([240, 32, 32])])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([240, 32, 32])])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([240, 32, 32])])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([240, 32, 32])])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([240, 32, 32])])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])92.9249674479165 KL Loss: 135.05550638834634 CE Loss: 2291.574462890625
Avg wmse 0.40646180510520935 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
Avg wmse 0.40646180510520935 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([240, 32, 32])])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([240, 32, 32])])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([240, 32, 32])])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([240, 32, 32])])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([240, 32, 32])])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([240, 32, 32])])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32])5 Avg ssim 0.1442469358444214.05550638834634 CE Loss: 2291.574462890625
Avg wmse 0.4416421353816986 Avg ssim 0.12303528934717178.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32]) Avg ssim 0.12303528934717178.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32]) Avg ssim 0.12303528934717178.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32]) Avg ssim 0.12303528934717178.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32]) Avg ssim 0.12303528934717178.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32]) Avg ssim 0.12303528934717178.05550638834634 CE Loss: 2291.574462890625
Avg wmse 0.4256362020969391 Avg ssim 0.13928286731243134.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32]) Avg ssim 0.13928286731243134.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32]) Avg ssim 0.13928286731243134.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32]) Avg ssim 0.13928286731243134.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32]) Avg ssim 0.13928286731243134.05550638834634 CE Loss: 2291.574462890625
torch.Size([1, 16, 32, 32]) Avg ssim 0.13928286731243134.05550638834634 CE Loss: 2291.574462890625
Avg wmse 0.4371910095214844 Avg ssim 0.12191790342330933.05550638834634 CE Loss: 2291.574462890625
